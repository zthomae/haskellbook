1. Write your own version of zip :: [a] -> [b] -> [(a, b)]

zip :: [a] -> [b] -> [(a, b)]
zip [] _ = []
zip _ [] = []
zip (a:as) (b:bs) = (a, b) : zip as bs

2. Write zipWith

zipWith :: (a -> b -> c) -> [a] -> [b] -> [c]
zipWith _ [] _ = []
zipWith _ _ [] = []
zipWith f (a:as) (b:bs) = (f a b) : zipWith f as bs

3. Rewrite zip in terms of zipWith

zip :: [a] -> [b] -> [(a, b)]
zip = zipWith (,)
